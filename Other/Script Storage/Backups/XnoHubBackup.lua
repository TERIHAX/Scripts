-- This file was generated using Luraph Obfuscator v13.5.9

do return(function(aq,Iq,tq,Nq,Oq,eq,xq,dq,gq,Jq,Lq,Uq,fq,Xq,hq,uq,mq,Kq,Bq,Hq,Cq,Wq,wq,Rq,zq,Zq,Fq,Pq,Qq,jq,Vq,yq,Gq,cq,Eq,Yq,qq,pq,nq,Aq,b,...)local D,Mq,W,s=select,0X0,nil,(nil);do while Mq~=0X00002 do if Mq==0X0 then do W={[0x0000]={[Pq]=0x0,0x1,0x2,0X3,0X0004,5,0X006,0X7,8,0X9,10,11,0X0c,13,14,15},{[0X00000]=0X1,0,0X3,0X2,5,0X4,7,6,0X9,8,11,10,13,0XC,hq,14},{[0X000]=0X2,3,0,0X1,6,0X7,Bq,0X5,10,0Xb,8,0X9,0X0E,0X000f,0x0000c,13},{[Pq]=3,2,Zq,0X000,7,0X6,0X00005,0X00004,0x00b,0Xa,9,8,15,14,0xd,0Xc},{[0]=4,5,6,7,0X0,0x1,0x002,0X3,12,Kq,14,0XF,fq,9,10,11},{[0]=5,4,7,6,1,0,3,2,Kq,0X00c,15,0Xe,0x9,8,0XB,0Xa},{[0X0]=0x6,7,Bq,0X5,zq,3,0,1,0Xe,hq,0XC,0XD,10,0Xb,0X8,0X9},{[0]=0X7,6,0X5,4,3,2,0X00001,0,0xF,0xe,13,12,0xB,0x00a,9,8},{[0x0]=0X8,9,0xA,0XB,12,0xd,14,0x0000F,0,0x1,2,0X3,0X04,0x00005,0X6,7},{[0x0]=Nq,8,11,0X000A,0X0D,0XC,15,0x0000E,1,0,0X00003,0X2,5,0x4,7,0X00006},{[0X00]=Oq,Jq,8,0x09,14,0X0f,12,13,0X002,0x3,0,1,0X6,7,0X4,5},{[0]=11,10,9,8,15,14,Kq,12,0x0003,zq,1,0X0,0x7,0X6,0X5,0X4},{[Pq]=12,0xD,0xe,0x0F,8,0X9,0XA,0x00b,0X4,5,6,7,Pq,1,0X0002,0X003},{[0]=13,12,15,14,Nq,8,0Xb,10,5,0X4,0x0007,0X6,Zq,0,3,2},{[0X0]=14,15,12,13,10,11,0X0008,9,0X6,7,4,5,2,0X03,0,1},{[0X0]=15,Gq,13,12,11,10,9,8,7,6,5,4,0X3,0X2,0X0001,0X0}};end;Mq=0X1;else s=Cq;Mq=0X2;end;end;end;local l,rq,I,h=nil,nil,nil,(nil);local T=(pcall);do for hR=0X000,0x3 do if not(hR<=0X001)then if hR~=2 then h=string.gsub;else I=0X1;end;else if hR~=0 then do rq={};end;else do l=Vq;end;end;end;end;end;local S,m=assert,2147483648;Mq=3;local Q,E,r,v,P,B,K,z,O,G=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat if not(Mq<=4)then do if not(Mq<=0X7)then if Mq<=8 then do z=tq;end;Mq=10;else if Mq==0X9 then P=Aq;Mq=0X0005;else O=Lq;Mq=0X0004;end;end;else if Mq<=5 then B=string.match;Mq=0X1;elseif Mq~=6 then v=Iq.byte;Mq=0X9;else E={[0X0]=0X1};Mq=0X0;end;end;end;else do if not(Mq<=0x1)then if not(Mq<=2)then if Mq==0X3 then Q={5,4,2};do Mq=6;end;else G=mq or gq;do Mq=0X2;end;end;else break;end;else if Mq~=0X0 then do K=Hq;end;Mq=8;else r=eq;do Mq=0x7;end;end;end;end;end;until false;Mq=1;local c,o,V,e=nil,nil,nil,(nil);while Mq~=4 do if Mq<=1 then if Mq~=0x00 then c=m-Zq;Mq=0;else o=aq;do Mq=3;end;end;else do if Mq==2 then do e=(V and V()or cq);end;do Mq=4;end;else do V=uq;end;Mq=0X2;end;end;end;end;locallocal k=(Iq.sub);Mq=0X00000;local Tq,f=nil,nil;do repeat if Mq~=0x0 then do f=Eq;end;break;else do Tq=function(...)return D("#",...),{...};end;end;Mq=0X1;end;until false;end;local C=setfenv;Mq=0x1;local H=nil;while Mq<=0X1 do do if Mq~=0 then Mq=0X00;else A=h(k(A,pq),"..",function(gE)if v(gE,2)==0x00048 then H=l(k(gE,0X1,0X1));return"";else local rk,Jk=1,(nil);repeat if rk~=0X00000 then Jk=o(l(gE,16));do rk=0X0;end;else if H then local Fp,Op=0,(nil);while true do if Fp<=0 then Op=P(Jk,H);do Fp=0x2;end;else if Fp==1 then return Op;else H=nil;Fp=1;end;end;end;else return Jk;end;do rk=2;end;end;until rk>1;end;end);Mq=2;end;end;end;Mq=1;local t,sq=nil,(nil);do while Mq<=0X0001 do if Mq~=0 then do t=function()local bX=v(A,I,I);do I=I+0X0001;end;return bX;end;end;do Mq=0;end;else sq={};Mq=0X2;end;end;end;local L=(function()local t5,z5,s5,N5=v(A,I,I+3);local X5=(1);repeat do if X5==0 then return N5*16777216+s5*65536+z5*0X000100+t5;else I=I+4;X5=0;end;end;until(false);end);Mq=0X0;local g,u=nil,(nil);while Mq~=0X00002 do do if Mq~=0 then u=g-0X01;Mq=0X2;else g=0X100000000;Mq=1;end;end;end;do Mq=2;end;local J,a,w=nil,nil,(nil);do while 0X0017eA03eD do do if not(Mq<=1)then do if Mq==2 then J=wq;do Mq=0x0;end;else do w=function()local pi,Ii,Li=1,nil,(nil);while true do if not(pi<=0)then if pi==1 then Ii,Li=L(),L();pi=0X00002;else if Li>=m then Li=Li-g;end;do pi=0;end;end;else return Li*g+Ii;end;end;end;end;break;end;end;else if Mq==0 then a=0x00002^52;Mq=1;else do local td=1;local Rd=(nil);do while td~=0X2 do if td==0X0 then for Ne=0X1,31 do for vR=0,1 do if vR~=0X00 then do Rd=Rd*0X2;end;else(E)[Ne]=Rd;end;end;end;do td=0x2;end;else Rd=2;td=0x000;end;end;end;end;Mq=0X003;end;end;end;end;end;Mq=0X01;local p,X=nil,nil;while Mq<2 do if Mq~=0 then do p=function(hM,EM,iM)local PM,OM=(hM/E[EM])%E[iM],(1);do repeat do if OM==0X00 then return PM;else PM=PM-PM%0x1;OM=0X0;end;end;until(false);end;end;end;Mq=0X0;else X=function()local o3,J3,U3,P3=nil,nil,nil,nil;for Hb=0,4 do if Hb<=0X1 then if Hb==0 then o3=L();else J3=L();end;else if Hb<=2 then if o3==0x0 and J3==0X0 then return 0;end;elseif Hb==0X003 then do U3=(-0x001)^p(J3,31,Zq);end;else P3=p(J3,0X14,Jq);end;end;end;local B3=(p(J3,0,0X00014)*g+o3);local E3,F3=0X02,(nil);repeat if E3<=0 then if P3==0 then if B3~=0 then local NF=1;do repeat if NF==0 then F3=0;do break;end;else P3=0X0001;do NF=0;end;end;until false;end;else return U3*0;end;else if P3~=0X0007fF then else do if B3~=0 then return U3*(0X1/0x0);else do return U3*(0/0X0);end;end;end;end;end;E3=0x001;else do if E3==0X01 then return U3*(0X0002^(P3-1023))*(B3/a+F3);else do F3=1;end;E3=0X0000;end;end;end;until false;end;Mq=2;end;end;local Y=((Xq or Wq));local j=(Y and Y[Yq]or function(Ui,vi)Ui=Ui%g;local Bi,Vi=nil,nil;local di=(0X2);repeat if not(di<=0)then if di~=1 then vi=vi%g;di=0;else Vi=1;do break;end;end;else do Bi=0;end;di=0X0001;end;until(false);di=0X0;do while 0.5196603051906248 do if di==0 then while Ui>Pq and vi>0x0 do local mY,OY=nil,nil;local CY=0X3;while CY~=0X4 do if CY<=0X00001 then do if CY==0 then OY=vi%0X000010;CY=1;else Bi=Bi+W[mY][OY]*Vi;CY=2;end;end;else do if CY~=0x2 then mY=Ui%16;CY=0;else Ui=(Ui-mY)/0x10;CY=4;end;end;end;end;do vi=(vi-OY)/16;end;Vi=Vi*0X10;end;di=1;else return Bi+Ui*Vi+vi*Vi;end;end;end;end);local F=(Y and Y.band or function(s3,V3)local k3=0X01;do repeat do if not(k3<=0x000)then do if k3~=0X01 then return((s3+V3)-j(s3,V3))/0x2;else s3=s3%g;k3=0;end;end;else V3=V3%g;k3=0X2;end;end;until(false);end;end);local U=Y and Y[jq]or function(HI,TI)local vI=0x0;do while'\0411\099w\101S,\057'do do if vI<=0X000 then HI=HI%g;vI=0X2;else do if vI==0X1 then return u-F(u-HI,u-TI);else TI=TI%g;vI=1;end;end;end;end;end;end;end;local y=(Y and Y.bnot or function(Ft)return u-(Ft%g);end);do Mq=2;end;local Z,d,q=nil,nil,nil;repeat do if not(Mq<=1)then if Mq==2 then Z=Fq;Mq=3;else do d=Y and Y.lshift;end;Mq=1;end;else if Mq==0X0000 then d=d or function(N0,D0)do for Ll=0,0X2 do do if Ll<=0X0000 then do if not(D0>=32)then else return 0X0;end;end;else do if Ll~=0x01 then return(N0*E[D0])%g;else if not(D0<0X0)then else do return q(N0,-D0);end;end;end;end;end;end;end;end;end;do Mq=4;end;else q=Y and Y.rshift;Mq=0X00;end;end;end;until Mq>=4;q=q or function(g7,U7)do if U7>=32 then return 0X0;end;end;if U7<0 then return d(g7,-U7);end;local e7=(nil);for s5=0,1 do if s5==0 then e7=(g7%g/E[U7]);else return e7-e7%0X00001;end;end;end;Mq=0X1;local x,R=nil,nil;while Mq<=0X1 do if Mq==0x00 then do R=function()local Bv,pv=0,0X0;do while"8"do local wT=v(A,I,I);I=I+1;pv=U(pv,d(F(wT,127),Bv));if F(wT,0X000080)~=0X0 then else return pv;end;Bv=Bv+7;end;end;end;end;Mq=2;else x={[2]=7,[1]=0X1,[0]=0X1,[1]=0X08,[4]=0x1,[0X0008]=0x8,[3]=0,[0]=0X08,[6]=0x4,[0]=0X2,[5]=0X0006};do Mq=0X0;end;end;end;local bq=(t());local Sq=t();do Mq=0x3;end;local Dq,M,i,lq,iq=nil,nil,nil,nil,(nil);repeat do if Mq<=1 then do if Mq~=0X0 then iq=0X0001;Mq=0X0005;else i=dq;Mq=4;end;end;else do if not(Mq<=0x2)then if Mq==0x3 then Dq=function(oJ)local jJ,EJ,CJ,bJ,wJ=nil,nil,nil,nil,(nil);do for Ja=0X00000,0x7 do if Ja<=3 then do if not(Ja<=1)then if Ja~=2 then bJ=j(jJ[3],Sq);else do CJ=j(jJ[0X2],Sq);end;end;else if Ja==0 then jJ={v(A,I,I+Uq)};else EJ=j(jJ[1],Sq);end;end;end;else if not(Ja<=0x5)then if Ja~=6 then return wJ*0x1000000+bJ*65536+CJ*256+EJ;else I=I+0X004;end;elseif Ja~=4 then Sq=(yq*Sq+oJ)%nq;else wJ=j(jJ[0X04],Sq);end;end;end;end;end;Mq=0X0002;else lq=function(AG)local QG,qG,JG=2,nil,(nil);do repeat do if QG<=0x01 then if QG==0 then I=I+qG;QG=4;else for n3=1,qG,7997 do local e3,f3=nil,(nil);for F2=0,0X2 do do if F2<=0X00000 then e3=n3+0X01F3d-Zq;else do if F2==1 then do if not(e3>qG)then else do e3=qG;end;end;end;else f3={v(A,I+n3-1,I+e3-0X00001)};end;end;end;end;end;local L3=1;do while L3<2 do if L3==0 then do JG=JG..o(G(f3));end;L3=2;else for f8=0X0001,#f3 do(f3)[f8]=j(f3[f8],bq);bq=(AG*bq+0X39)%0X100;end;L3=0;end;end;end;end;QG=0;end;elseif QG<=0x2 then qG=L();QG=3;else if QG==3 then JG="";QG=0X001;else do return JG;end;end;end;end;until false;end;end;do Mq=0X01;end;end;else M=function()local fj=1;local oj=(nil);do while true do if not(fj<=0)then if fj==0X1 then oj=R();fj=0X02;else do if oj>c then return oj-g;end;end;fj=0X000;end;else return oj;end;end;end;end;Mq=0x0;end;end;end;end;until Mq>=5;local N=next;do Mq=0X004;end;local kq,vq,oq=nil,nil,(nil);repeat if Mq<=0X2 then if Mq<=0X0 then rq[Zq]=sq;Mq=0x5;else if Mq~=0X1 then oq=vq();Mq=0;else function vq()local jB,AB,SB=nil,nil,(nil);do for CT=0,0X3 do do if not(CT<=1)then do if CT~=2 then do SB={{},{},nil,qq,nil,{},nil,nil,qq};end;else AB=0X1;end;end;else if CT==0X000 then else jB={};end;end;end;end;end;local XB,dB,wB=1,nil,nil;while XB~=2 do if XB==0 then wB={};XB=0x2;else do dB={};end;XB=0X0000;end;end;local lB=SB[2];local VB=(L()-0xfE15);XB=1;local OB,sB=nil,(nil);do while XB~=2 do if XB~=0X0 then OB=t();do XB=0;end;else sB=t()~=0X000;XB=2;end;end;end;XB=1;local NB=nil;do repeat do if XB<=1 then if XB~=0X0 then for X2=0X1,VB do local h2,L2,K2=qq,0,nil;while(true)do if L2==0X0 then K2=t();L2=1;else do(wB)[X2-Zq]=AB;end;break;end;end;if K2==171 then h2=k(lq(OB),X()+L());elseif K2==142 then h2=k(lq(OB),t());elseif K2==96 then h2=X();elseif K2==25 then h2=k(lq(OB),L());elseif K2==249 then h2=X()+L();elseif K2==63 then h2=k(lq(OB),0X5);elseif K2==126 then h2=Qq;elseif K2==0Xc5 then h2=false;elseif K2==99 then h2=X()+L();elseif K2==146 then h2=w();end;local W2=({h2,{}});for w1=0x00000,0X2 do if w1<=0X0 then dB[AB]=W2;else if w1==0X1 then do AB=AB+1;end;else if not(sB)then else for y5=0,1 do if y5~=0 then iq=iq+0X1;else sq[iq]=W2;end;end;end;end;end;end;end;XB=0x3;else SB[0X8]=R();XB=0X5;end;else if XB<=0X0002 then for NK=1,NB do lB[NK]={[4]=M(),[0X00006]=t(),[2]=M(),[1]=t(),[5]=M(),[0x07]=t(),[0X3]=R()};end;XB=0X4;else do if XB~=0X3 then(SB)[0x009]=R();XB=0;else NB=L()-xq;XB=2;end;end;end;end;end;until XB>=0x5;end;XB=0X01;local IB=(nil);while XB<=1 do do if XB~=0X0 then for pf=1,NB do local Wf=(0);local lf=nil;while(true)do do if Wf~=0 then for kt,Vt in Rq(Q)do local mt,yt=nil,nil;for sH=0,1 do do if sH~=0 then do yt=lf[mt];end;else mt=x[Vt];end;end;end;do if yt==12 then local NR=(wB[lf[Vt]]);local RR=(dB[NR]);if RR then local B0=nil;local V0=0X00002;repeat if not(V0<=0X0)then if V0~=0X0001 then do lf[mt]=RR[1];end;V0=1;else do B0=RR[2];end;V0=0;end;else do(B0)[#B0+1]={lf,mt};end;V0=3;end;until V0==0X3;end;elseif yt~=0x000B then else lf[Vt]=pf+lf[Vt]+1;end;end;end;break;else lf=SB[2][pf];do Wf=0X00001;end;end;end;end;end;XB=0X00;else IB=L()-0X7d4C;XB=2;end;end;end;local cB=(SB[0X6]);XB=2;local xB=(nil);do while XB~=3 do if XB<=0 then do xB=L();end;XB=0X00003;else if XB==1 then(SB)[pq]=R();do XB=0X0;end;else for rv=0x00000,IB-0x1 do cB[rv]=vq();end;XB=1;end;end;end;end;for yC=0,4 do if not(yC<=0X1)then if not(yC<=2)then if yC==0X3 then for OV=Zq,R()do jB[OV]={t(),R()};end;else(SB)[0X0010]=t();end;else(SB)[3]=jB;end;else do if yC==0X00 then for zV=1,xB do local xV,kV,MV,nV=0X0,nil,nil,(nil);do repeat if not(xV<=0X1)then if xV==0X2 then MV=L();xV=1;else do for eL=kV,MV do SB[1][eL]=nV;end;end;do xV=4;end;end;else if xV==0 then kV=L();xV=0X002;else nV=L();xV=0x3;end;end;until xV>=0X004;end;end;else do(SB)[11]=L();end;end;end;end;end;(SB)[10]=L();do SB[19]=t();end;do XB=0X1;end;local bB=nil;repeat do if XB<=0X00 then SB[Bq]=p(bB,1,1)~=0;break;else do if XB~=1 then do bB=t();end;do XB=0X0;end;else(SB)[0x11]=t();XB=2;end;end;end;end;until(false);SB[0x007]=p(bB,0X0002,0x00001)~=0X000;return SB;end;Mq=0X2;end;end;elseif not(Mq<=0X4)then if Mq==0X5 then sq=qq;Mq=0X0006;else do return kq(qq,oq,e)(...);end;end;else if Mq==0X3 then function kq(yJ,OJ,dJ)local FJ,XJ=OJ[2],OJ[0X6];local iJ,lJ,mJ=OJ[0x009],OJ[1],(OJ[0x004]);local oJ=OJ[5];local JJ=(OJ[0x007]);local QJ=K({},{__mode='v'});local HJ=nil;local AJ=(OJ[0X8]);HJ=function(...)local BS={};local iS=(0);local US=(1);local wS=(V and V()or _ENV);local MS=(wS==e and dJ or wS);local FS,sS=Tq(...);local mS=({[0X02]=BS,[0X0001]=OJ});FS=FS-0X1;for TZ=0X00000,FS do do if not(oJ>TZ)then break;else BS[TZ]=sS[TZ+0X01];end;end;end;if not mJ then sS=nil;elseif not(JJ)then else BS[oJ]={n=FS>=oJ and FS-oJ+1 or 0X0,G(sS,oJ+1,FS+1)};end;if MS~=wS then do if C then C(HJ,MS);else do _ENV=MS;end;end;end;end;local hS,YS,eS,DS=T(function()while true do local MH=(FJ[US]);local TH=MH[3];US=US+1;if TH<48 then if TH>=24 then if not(TH<0X24)then if not(TH>=0X0002A)then if TH<39 then if not(TH>=0X25)then local MY=(MH[2]);(BS[MY])(BS[MY+1],BS[MY+0X2]);iS=MY-1;else if TH~=38 then mS[MH[5]]=BS[MH[0X2]];else do(BS)[MH[0X2]]=d(BS[MH[5]],BS[MH[4]]);end;end;end;else do if TH<40 then repeat local Wd,Ed=QJ,BS;if not(#Wd>0x00)then else local ST={};for D9,s9 in N,Wd do for fU,cU in N,s9 do if not(cU[0X01]==Ed and cU[0X02]>=0)then else local wQ=cU[2];do if not ST[wQ]then do ST[wQ]={Ed[wQ]};end;end;end;(cU)[0X01]=ST[wQ];(cU)[0X002]=1;end;end;end;end;until true;return true,MH[0x2],1;else if TH==0X29 then iS=MH[0X0002];BS[iS]();iS=iS-0X1;else(BS[MH[0x2]])[BS[MH[0X5]]]=BS[MH[4]];end;end;end;end;else if not(TH<0X2d)then if TH>=0X00002e then if TH==0X00002F then local ou=MH[0X2];BS[ou](G(BS,ou+0x1,iS));iS=ou-0x0001;else local pA=(MH[0X0002]);(BS)[pA]=BS[pA](BS[pA+1]);iS=pA;end;else repeat local cc,zc=QJ,(BS);if#cc>0 then local Ga={};for JH,iH in N,cc do for yN,gN in N,iH do if not(gN[0x1]==zc and gN[0X2]>=0)then else local vf=(gN[2]);do if not(not Ga[vf])then else Ga[vf]={zc[vf]};end;end;(gN)[1]=Ga[vf];(gN)[2]=1;end;end;end;end;until true;return false,MH[0X2],iS;end;else do if TH>=43 then if TH~=0X2C then BS[MH[0X2]]=BS[MH[0X0005]]^BS[MH[0X4]];else local OR=(MH[0X2]);local kR,UR=BS[OR],BS[OR+0x1];local rR=BS[OR+2];do BS[OR]=O(function()do for Mv=kR,UR,rR do J(true,Mv);end;end;end);end;US=MH[5];end;else local kG=MH[0X2];local nG,cG,FG=BS[kG]();if not(nG)then else BS[kG+1]=cG;(BS)[kG+0x2]=FG;US=MH[5];end;end;end;end;end;else if TH>=30 then do if TH>=0X21 then if TH<34 then(BS)[MH[0x0002]]=BS[MH[0X5]]*BS[MH[0x0004]];else do if TH==35 then local XY=MH[0X2];do iS=XY+MH[5]-0X1;end;(BS[XY])(G(BS,XY+1,iS));do iS=XY-1;end;else BS[MH[0X2]]={G({},1,MH[5])};end;end;end;else if not(TH>=31)then(BS)[MH[0x02]]=BS[MH[0X5]]-BS[MH[4]];else if TH==32 then BS[MH[0X0002]]=q(BS[MH[0X5]],BS[MH[0X04]]);else do BS[MH[0X2]]=BS[MH[5]]<BS[MH[4]];end;end;end;end;end;else if not(TH<27)then if TH>=28 then if TH==0X1D then BS[MH[2]]=BS[MH[5]]>=BS[MH[4]];else do iS=MH[0X2];end;do(BS)[iS]=BS[iS]();end;end;else(BS)[MH[0X00002]]=BS[MH[5]]>BS[MH[0X04]];end;else do if not(TH>=25)then local DV=(MH[5]);local SV=BS[DV];for EK=DV+1,MH[0x4]do do SV=SV..BS[EK];end;end;(BS)[MH[2]]=SV;else if TH~=26 then BS[MH[0X2]]=MH[6];else BS[MH[2]]=BS[MH[0x5]]~=BS[MH[0X4]];end;end;end;end;end;end;else do if TH>=0X0c then if TH<18 then if not(TH<0XF)then if TH>=0X0010 then do if TH~=0X11 then local GX=(MH[2]);local kX=(FS-oJ);if kX<0 then kX=-0x01;end;for Vu=GX,GX+kX do BS[Vu]=sS[oJ+(Vu-GX)+1];end;iS=GX+kX;else BS[MH[2]]=y(BS[MH[5]]);end;end;else(BS)[MH[0X2]]=not BS[MH[0x00005]];end;else if not(TH>=0XD)then local UQ=(MH[2]);do(BS)[UQ]=BS[UQ](BS[UQ+1],BS[UQ+2]);end;iS=UQ;else if TH==14 then BS[MH[0X02]]={};else(BS[MH[2]])[MH[0X6]]=BS[MH[0X4]];end;end;end;else if TH>=21 then if TH>=22 then if TH~=0X17 then local Ev=(MH[0X2]);local zv,iv=BS[Ev]();if not(zv)then else(BS)[Ev+0X01]=iv;do US=MH[0X5];end;end;else do if MH[0x4]==219 then US=US-0X1;FJ[US]={[2]=(MH[0x02]-0x000f8),[0X5]=(MH[5]-0XF8),[0x3]=10};elseif MH[0X4]~=0x69 then do if not(not BS[MH[0x2]])then else US=MH[0X05];end;end;else US=US-0x001;do FJ[US]={[0X3]=45,[0X0005]=(MH[5]-0X73),[0X2]=(MH[0X002]-115)};end;end;end;end;else if MH[4]==0XD4 then US=US-0X1;(FJ)[US]={[0X3]=0X0010,[2]=(MH[0X002]-155),[5]=(MH[5]-155)};else(BS)[MH[2]]=-BS[MH[0X5]];end;end;else if not(TH>=0X000013)then(BS[MH[2]])[MH[6]]=MH[1];else do if TH~=0x14 then local Sx=MH[0X2];local ax=(O(function(...)(J)();for rr in...do(J)(true,rr);end;end));ax(BS[Sx],BS[Sx+1],BS[Sx+2]);iS=Sx;(BS)[Sx]=ax;US=MH[0X0005];else(BS)[MH[0X2]]=#BS[MH[5]];end;end;end;end;end;else if not(TH<6)then if TH<0X9 then do if TH<7 then do(BS)[MH[0X2]]=BS[MH[5]][MH[1]];end;else if TH==8 then(BS)[MH[2]]=BS[MH[0X5]]~=MH[0X1];else if not(BS[MH[0x5]]<BS[MH[0X4]])then US=MH[2];end;end;end;end;else do if not(TH<0XA)then if TH==0xb then(BS)[MH[2]]=F(BS[MH[5]],BS[MH[0X0004]]);else if MH[4]~=0Xcc then repeat local iI,zI=QJ,BS;if#iI>0X0 then local Jo={};for ua,pa in N,iI do for Tg,Ug in N,pa do do if Ug[1]==zI and Ug[0X2]>=0 then local vz=Ug[0X2];if not(not Jo[vz])then else(Jo)[vz]={zI[vz]};end;Ug[1]=Jo[vz];Ug[0X2]=1;end;end;end;end;end;until true;return;else do US=US-1;end;(FJ)[US]={[0x5]=(MH[0X5]-0X0000De),[0X2]=(MH[0X00002]-0xDE),[3]=60};end;end;else if BS[MH[5]]<BS[MH[4]]then US=MH[0X0002];end;end;end;end;else if not(TH>=0x3)then do if TH>=1 then if TH~=0x2 then(BS)[MH[0x00002]]=BS[MH[0X05]]%MH[1];else local tr=MH[5];(BS)[MH[0X2]]=BS[tr]..BS[tr+1];end;else local rJ=(BS[MH[0x00005]]);local LJ=(MH[2]);(BS)[LJ+1]=rJ;(BS)[LJ]=rJ[MH[0X1]];end;end;else if not(TH>=0X4)then local x7=MH[0X00002];local X7=O(function(...)J();do for VJ,DJ in...do(J)(true,VJ,DJ);end;end;end);(X7)(BS[x7],BS[x7+1],BS[x7+0X2]);iS=x7;BS[x7]=X7;US=MH[5];else if TH==5 then local VJ=MH[0X2];local IJ,EJ=BS[VJ]();if not(IJ)then else for Ag=0x0001,MH[0x00004]do do BS[VJ+Ag]=EJ[Ag];end;end;US=MH[0X5];end;else do(BS)[MH[0X0002]]=BS[MH[5]]==BS[MH[4]];end;end;end;end;end;end;end;end;else if not(TH<72)then do if TH<0X54 then if not(TH<0x4E)then if not(TH<81)then if not(TH>=82)then local w2=(MH[0X2]);local d2,L2=BS[w2],((MH[0X4]-0X001)*0x0032);for vm=0x1,iS-w2 do do d2[L2+vm]=BS[w2+vm];end;end;else if TH==0X53 then(BS)[MH[0X2]]=j(BS[MH[0X5]],BS[MH[0X4]]);else BS[MH[0X2]][BS[MH[0X5]]]=MH[0X1];end;end;else if TH>=79 then if TH~=0X050 then(BS)[MH[0X2]]=false;else local Tw=yJ[MH[5]];(Tw[0X1])[Tw[0X0002]]=BS[MH[0X02]];end;else BS[MH[2]]=BS[MH[5]]+BS[MH[0X004]];end;end;else if TH<75 then if TH<0x049 then repeat local Ha,Aa=QJ,BS;if#Ha>0X00 then local Wu=({});for HE,gE in N,Ha do for v9,P9 in N,gE do if P9[0X1]==Aa and P9[2]>=0 then local vB=(P9[0x02]);do if not(not Wu[vB])then else(Wu)[vB]={Aa[vB]};end;end;(P9)[1]=Wu[vB];P9[0X2]=0X1;end;end;end;end;until true;return true,MH[2],0;else do if TH~=0X0004A then repeat local NV,eV,nV=QJ,BS,(MH[2]);if#NV>0 then local YJ=({});for Id,Xd in N,NV do for J_,z_ in N,Xd do do if z_[1]==eV and z_[0x002]>=nV then local pt=(z_[2]);if not(not YJ[pt])then else do(YJ)[pt]={eV[pt]};end;end;do(z_)[1]=YJ[pt];end;(z_)[2]=1;end;end;end;end;end;until true;else local fD=(MH[2]);local nD,ZD=BS[fD]();if not(nD)then else US=MH[5];do BS[fD+3]=ZD;end;end;end;end;end;else if not(TH>=76)then if MH[0x4]==196 then US=US-1;FJ[US]={[0X5]=(MH[0X0005]-0x000a),[2]=(MH[0X00002]-10),[0X3]=84};else local wH=(MH[2]);for fx=wH,wH+(MH[5]-1)do(BS)[fx]=sS[oJ+(fx-wH)+0X001];end;end;else if TH~=0x00004D then(BS)[MH[2]]=BS[MH[5]]%BS[MH[4]];else local fY=MH[0X00002];local yY,UY=MH[0X5],(MH[4]);if yY~=0X0 then do iS=fY+yY-1;end;end;local RY,AY=nil,(nil);if yY==0X1 then RY,AY=Tq(BS[fY]());else RY,AY=Tq(BS[fY](G(BS,fY+1,iS)));end;if UY==0x001 then iS=fY-0X001;else if UY~=0 then RY=fY+UY-0x2;iS=RY+1;else RY=RY+fY-0X0001;iS=RY;end;local Me=(0);do for vQ=fY,RY do Me=Me+0X0001;BS[vQ]=AY[Me];end;end;end;end;end;end;end;else do if not(TH<90)then if TH<0X5d then if not(TH<91)then if TH==92 then BS[MH[0x2]]=BS[MH[0X5]]/BS[MH[4]];else local IC=(MH[0X2]);local dC=(O(function(...)(J)();for FL,UL,YL,dL,wL,rL,vL,uL,sL,AL in...do J(true,{FL,UL,YL,dL,wL,rL,vL,uL,sL,AL});end;end));(dC)(BS[IC],BS[IC+1],BS[IC+0x2]);iS=IC;(BS)[IC]=dC;US=MH[5];end;else local WO,MO=MH[0X02],((MH[0X00004]-1)*50);local vO=BS[WO];for Ei=1,MH[0X05]do vO[MO+Ei]=BS[WO+Ei];end;end;else if not(TH<0X005E)then if TH==0x5F then local EQ=(MH[0X002]);(BS[EQ])(BS[EQ+0X1]);iS=EQ-0x1;else rq[MH[0X5]]=BS[MH[0X2]];end;else if BS[MH[0X005]]~=MH[1]then US=MH[2];end;end;end;else do if not(TH>=0X00057)then do if not(TH>=85)then do(BS)[MH[0X0002]]=BS[MH[0X00005]];end;else if TH~=0X56 then local Ot,st=MH[0X2],(MH[5]);do iS=Ot+st-1;end;repeat local gE,fE=QJ,(BS);if not(#gE>0)then else local Ap=({});for qi,ti in N,gE do for Ba,Ga in N,ti do do if Ga[0X1]==fE and Ga[2]>=0x00000 then local Z1=(Ga[0X2]);if not(not Ap[Z1])then else Ap[Z1]={fE[Z1]};end;do(Ga)[1]=Ap[Z1];end;(Ga)[0X00002]=1;end;end;end;end;end;until true;return true,Ot,st;else if MH[0X4]~=71 then(BS)[MH[0X2]]=nil;else US=US-1;FJ[US]={[0X05]=(MH[5]-68),[3]=84,[2]=(MH[0X0002]-0X44)};end;end;end;end;else do if not(TH<88)then if TH~=0x59 then BS[MH[0X2]]=U(BS[MH[0X5]],BS[MH[4]]);else do(BS)[MH[2]]=BS[MH[5]][BS[MH[4]]];end;end;else do if MH[4]==32 then US=US-0X1;(FJ)[US]={[5]=(MH[0X0005]-183),[0X2]=(MH[2]-0x00B7),[3]=0X0056};elseif MH[4]==0X000A8 then US=US-0X1;do(FJ)[US]={[3]=45,[0X00005]=(MH[5]-108),[0X2]=(MH[0x2]-108)};end;elseif MH[0X004]==0X000f5 then US=US-0X1;do FJ[US]={[0X5]=(MH[0X0005]-0X007C),[3]=0X43,[0X00002]=(MH[2]-124)};end;else do repeat local a0,P0=QJ,(BS);if#a0>0x0000 then local Hm={};do for ik,ek in N,a0 do for jo,qo in N,ek do do if qo[0X1]==P0 and qo[2]>=0X0 then local lW=qo[2];if not Hm[lW]then Hm[lW]={P0[lW]};end;do qo[0X001]=Hm[lW];end;(qo)[0X002]=1;end;end;end;end;end;end;until true;end;local bA=(MH[0X2]);return false,bA,bA+MH[5]-0X002;end;end;end;end;end;end;end;end;end;end;else do if TH<0x0003c then if not(TH<0x036)then if TH<0x39 then if TH>=55 then if TH~=56 then(BS)[MH[2]]=MH[0x06];else if not(not(BS[MH[5]]<=BS[MH[0X0004]]))then else US=MH[2];end;end;else if not(BS[MH[5]]<=MH[0X1])then do US=MH[2];end;end;end;else if TH>=0X3a then if TH==0X3B then BS[MH[2]]=BS[MH[5]]<=BS[MH[4]];else local dR=MH[0x2];(BS)[dR]=BS[dR](G(BS,dR+0X1,iS));iS=dR;end;else if BS[MH[0X5]]~=BS[MH[0X4]]then US=MH[2];end;end;end;else if TH>=51 then if TH>=0X34 then if TH==53 then if MH[0x4]==0X00045 then US=US-1;(FJ)[US]={[5]=(MH[5]-137),[2]=(MH[2]-0X0089),[0X03]=21};elseif MH[4]~=114 then(BS)[MH[0X2]]=sS[oJ+0X1];else US=US-1;(FJ)[US]={[2]=(MH[0X02]-0x77),[0X3]=0Xa,[5]=(MH[5]-119)};end;else if BS[MH[0X2]]then US=MH[5];end;end;else do BS[MH[0x2]]=mS[MH[5]];end;end;else do if not(TH<49)then if TH==0x032 then do BS[MH[2]]=rq[MH[0X5]];end;else local LJ=(nil);local PJ=(XJ[MH[0x00005]]);local ZJ=PJ[3];local zJ=(#ZJ);if zJ>0 then do LJ={};end;for zC=1,zJ do local qC=(ZJ[zC]);if qC[0X1]~=0 then LJ[zC-0x1]=yJ[qC[0x2]];else LJ[zC-1]={BS,qC[0X2]};end;end;Z(QJ,LJ);end;(BS)[MH[2]]=kq(LJ,PJ,MS);end;else US=MH[5];end;end;end;end;else do if not(TH>=66)then if not(TH>=63)then if TH<61 then if MH[0x4]==243 then US=US-0X001;do(FJ)[US]={[0x00003]=86,[2]=(MH[0X2]-0X99),[0x0005]=(MH[5]-0X00099)};end;elseif MH[4]==0XAA then US=US-1;FJ[US]={[2]=(MH[0X2]-165),[5]=(MH[0x0005]-0xa5),[3]=86};elseif MH[4]==0xc1 then US=US-1;FJ[US]={[5]=(MH[0X5]-0X74),[0X2]=(MH[0X02]-0X74),[3]=20};elseif MH[4]==0X0Df then US=US-1;FJ[US]={[0X03]=73,[0X2]=(MH[0x2]-17),[5]=(MH[5]-0X011)};else repeat local vG,OG=QJ,(BS);do if not(#vG>0X0)then else local IX={};for di,fi in N,vG do for Fz,Az in N,fi do do if Az[0x1]==OG and Az[0x2]>=0 then local G1=Az[0X0002];if not(not IX[G1])then else do(IX)[G1]={OG[G1]};end;end;do Az[1]=IX[G1];end;Az[2]=1;end;end;end;end;end;end;until true;local oD=MH[2];return false,oD,oD;end;else do if TH==0X3e then local O_=MH[2];iS=O_+MH[5]-1;BS[O_]=BS[O_](G(BS,O_+1,iS));iS=O_;else do MS[MH[6]]=BS[MH[2]];end;end;end;end;else if TH>=64 then if TH~=0X41 then BS[MH[0X0002]]=MS[MH[0X00006]];else(BS)[MH[2]]=BS[MH[5]]*MH[0X01];end;else local WI=(yJ[MH[5]]);(BS)[MH[2]]=WI[0X1][WI[0X2]];end;end;else do if TH<69 then if not(TH<0X43)then if TH==0X044 then do BS[MH[0x002]]=true;end;else for XS=MH[0X2],MH[5]do BS[XS]=nil;end;end;else if not(BS[MH[0X05]]<=BS[MH[4]])then else US=MH[0X02];end;end;else if TH<70 then do if BS[MH[5]]~=BS[MH[4]]then else US=MH[0X2];end;end;else do if TH~=0X47 then if BS[MH[0X005]]==MH[0X0001]then do US=MH[0X2];end;end;else local RW=(BS[MH[5]]/BS[MH[4]]);BS[MH[2]]=RW-RW%1;end;end;end;end;end;end;end;end;end;end;end;end;end);do if not(hS)then do if s(YS)=='\115\116\114ing'then do if B(YS,'\097t\116\101\109pt\032to\032\121i\101\108\100 a\099\114\111\115s \109eta\109etho\100/\067\037\045ca\108\108\032bo\117nd\097\114\121')then return coroutine.yield();end;end;if B(YS,'^\046-\058\037d\043: ')then r("\076\117\114\097\112h Sc\114ipt:"..(lJ[US-0X1]or"(internal)").."\058 "..i(YS),0);else r(YS,0X00);end;else r(YS,0X0);end;end;else if YS then if DS==0X1 then return BS[eS]();else return BS[eS](G(BS,eS+1,iS));end;elseif not(eS)then else return G(BS,eS,DS);end;end;end;end;if C then C(HJ,dJ);end;do return HJ;end;end;Mq=1;else do Mq=0x3;end;end;end;until false;end)(string.char,string,rawset,0x00009,0xa,error,0X1799,tostring,table.unpack,11,coroutine.wrap,0X003,0X8,bit,15,getfenv,unpack,0Xd,0X004,setmetatable,type,bit32,coroutine.yield,ipairs,2,0x001,table.insert,0,true,'\098or',tonumber,0X06d,0X0E,_ENV,rawget,"bx\111r",nil,5,0x0000100,string.rep,{0X0000D5a3,53319417,0X0000400d1335,314350839,4237505124,0Xf185ba25,0X8605c6b7,335966540,2550457926},...);end;
